{-# LANGUAGE StandaloneDeriving #-}
module Language.FineTypes.Typ where

-- !!! This Haskell module has been autogenerated by agda2hs.
-- !!! Do NOT change; change the original .agda file instead.

type ConstructorName = String

type FieldName = String

type TypName = String

type VarName = String

data TypConst = Bool
              | Bytes
              | Integer
              | Natural
              | Text
              | Rational
              | Unit

data OpOne = Option
           | Sequence
           | PowerSet

data OpTwo = Sum2
           | Product2
           | PartialFunction
           | FiniteSupport

data Constraint1 = Braces [Constraint1]
                 | Token String

type Constraint = [Constraint1]

data Typ = Var TypName
         | Zero TypConst
         | One OpOne Typ
         | Two OpTwo Typ Typ
         | ProductN [(FieldName, Typ)]
         | SumN [(ConstructorName, Typ)]
         | Constrained VarName Typ Constraint

deriving instance Eq TypConst

