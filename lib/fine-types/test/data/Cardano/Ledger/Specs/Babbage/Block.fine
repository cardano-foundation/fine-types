module Block where

import Crypto(Proof,Seed,Sig,VKey,VKey_ev);
import PParams(KESPeriod,ProtVer);
import Address(Slot);
import Tx(Tx);

{-----------------------------------------------------------------------------
    Block Definitions
    Shelley spec, Figure 53
------------------------------------------------------------------------------}

-- Abstract types

HashHeader    = _; --^ hash of a block header
HashBBody     = _; --^ hash of a block body
BlockNo       = ℕ; --^ block number

--| Operational Certificate
OCert         =
    { vk_hot  : VKey_ev --^ operational (hot) key
    , n       : ℕ --^ certificate issue number
    , c_0     : KESPeriod --^ start KES period
    , σ       : Sig --^ cold key signature
    };

--| Block Header Body
BHBody        =
    { prev    : HashHeader? --^ hash of previous block header
    , vk      : VKey --^ block issuer
    , vrfVk   : VKey  --^ VRF verification key
    , blockno : BlockNo --^ block number
    , slot    : Slot --^ block slot
    , vrfRes  : Seed --^ VRF result value
    , prf     : Proof --^ vrf proof
    , bsize   : ℕ --^ size of the block body
    , bhash   : HashBBody --^ block body hash
    , oc      : OCert --^ operational certificate
    , pv      : ProtVer --^ protocol version
    };

-- Block Types

BHeader       = BHBody × Sig;
Block         = BHeader × Tx*;
