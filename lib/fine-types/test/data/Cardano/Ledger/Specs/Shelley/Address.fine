module  Address where

import Crypto(KeyHash, ScriptHash);

{-----------------------------------------------------------------------------
    Addresses
    Shelley spec, Figure 6
------------------------------------------------------------------------------}

Slot = ℕ; -- absolute slot number
Ix = ℕ; -- index
Network =
    Σ{ Testnet : Unit
     , Mainnet : Unit
     };

Credential = KeyHash + ScriptHash;

-- certificate pointer
Ptr = Slot × Ix × Ix;

-- base address
Addr_base =
    { network : Network
    , credential_pay : Credential
    , credential_stake : Credential
    };

-- pointer address
Addr_ptr =
    { network : Network
    , credential_pay : Credential
    , ptr : Ptr
    };

-- enterprise address
Addr_enterprise =
    { network : Network
    , credential_pay : Credential
    };

-- bootstrap address
Addr_bootstrap =
    { network : Network
    , keyHash_pay : KeyHash
    };

-- output address
Addr = Addr_base
    + Addr_ptr
    + Addr_enterprise
    + Addr_bootstrap;

-- reward account
Addr_rwd =
    { network : Network
    , credential_stake : Credential
    };

{-----------------------------------------------------------------------------
    Specialized synonyms
------------------------------------------------------------------------------}
Credential_stake = Credential;
